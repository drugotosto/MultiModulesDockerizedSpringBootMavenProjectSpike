<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ferrero</groupId>
	<artifactId>multimodules_dockerized_springboot_mavenproject_spike</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>MultiModulesDockerizedSpringBootMavenProject</name>
	<description>Demo project for Multi Modules Dockerized Maven Spring Boot Project</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
	</parent>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Internal repo</name>
			<url>file:///${project.basedir}/target</url>
			<layout>default</layout>
		</repository>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.name>drugotosto84/${project.artifactId}</docker.image.name>
		<docker.image.tag>${project.version}</docker.image.tag>
	</properties>

	<modules>
		<module>Repo</module>
		<module>Web</module>
	</modules>

	<!--<dependencyManagement>-->
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.2</version>
			</dependency>
		</dependencies>
	<!--</dependencyManagement>-->

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>docker-build</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<execution>
							<id>docker-push</id>
							<phase>install</phase>
							<goals>
								<goal>push</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<repository>${docker.image.name}</repository>
						<tag>${docker.image.tag}</tag>
						<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
						<buildArgs>
							<JAR_FILE>${project.artifactId}-${project.version}.jar</JAR_FILE>
						</buildArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<executions>
						<execution>
							<id>create-sources-jar</id>
							<phase>deploy</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<executions>
						<execution>
							<id>create-javadocs-jar</id>
							<phase>deploy</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
